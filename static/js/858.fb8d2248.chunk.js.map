{"version":3,"file":"static/js/858.fb8d2248.chunk.js","mappings":"0MAEaA,E,QAAUC,GAAAA,IAAH,qO,SCEdC,EAAaC,SAASC,cAAc,gBAgB1C,EAde,WACb,OAAOC,EAAAA,EAAAA,eACL,SAACL,EAAD,WACE,SAAC,KAAD,CACEM,MAAM,YACNC,OAAQ,IACRC,MAAO,IACPC,UAAU,wBAGdP,K,sHC0BJ,UArCqB,WACnB,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,SAG0BE,EAAAA,EAAAA,kBAAsBR,GAHhD,OAGUS,EAHV,OAIIL,EAAWK,GAJf,yEAOWH,GAAa,GAPxB,6EADc,uBAAC,WAAD,wBAUdI,KACC,CAACV,KAGF,2BACGK,IAAa,SAAC,IAAD,IACbF,EAAQQ,OAAS,IAChB,wBACGR,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,a,qDC9BNC,EAAUC,EAAQ,MAA3BC,QAEFC,EAAW,+BACXC,EAAU,2CAEVZ,EAAM,CACJa,oBADI,WACmB,OAAD,qHACHL,EAAM,GAAD,OAAIG,EAAJ,+BAAmCC,IADrC,cACpBE,EADoB,yBAEnBA,EAASC,KAAKd,SAFK,8CAKtBe,eANI,SAMWxB,GAAU,OAAD,qHACLgB,EAAM,GAAD,OAAIG,EAAJ,kBAAsBnB,EAAtB,YAAiCoB,IADjC,cACtBE,EADsB,yBAErBA,EAASC,MAFY,8CAKxBE,iBAXI,SAWaC,GAAa,OAAD,qHACVV,EAAM,GAAD,OACvBG,EADuB,+BACQO,EADR,YACsBN,EADtB,YADK,cAC3BE,EAD2B,yBAI1BA,EAASC,KAAKd,SAJY,8CAO7BkB,iBAlBI,SAkBa3B,GAAU,OAAD,qHACPgB,EAAM,GAAD,OACvBG,EADuB,kBACLnB,EADK,oBACcoB,IAFZ,cACxBE,EADwB,yBAIvBA,EAASC,KAAKK,MAJS,8CAO1BC,kBAzBI,SAyBc7B,GAAU,OAAD,qHACRgB,EAAM,GAAD,OACvBG,EADuB,kBACLnB,EADK,oBACcoB,EADd,2BADG,cACzBE,EADyB,yBAIxBA,EAASC,KAAKd,SAJU,+CAQnC","sources":["components/Overlay/Overlay.jsx","components/Loader/Loader.jsx","components/ReviwersList/ReviwersList.jsx","service/API.tmDB.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 20;\n`;\n\n","import { createPortal } from 'react-dom';\nimport { Circles } from 'react-loader-spinner';\nimport { Overlay } from 'components/Overlay/Overlay';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <Overlay>\n      <Circles\n        color=\"orangered\"\n        height={300}\n        width={300}\n        ariaLabel=\"loading-indicator\"\n      />\n    </Overlay>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'service/API.tmDB';\n\nconst ReviwersList = () => {\n  const { movieId } = useParams();\n  const [reviwes, setReviwes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchReviwes() {\n      try {\n        setIsLoading(true);\n        const results = await API.fetchMovieReviwes(movieId);\n        setReviwes(results);\n      } catch (error) {\n      }\n      finally {setIsLoading(false);}\n    }\n    fetchReviwes();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviwes.length > 0 && (\n        <ul>\n          {reviwes.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ReviwersList;\n","const { default: axios } = require('axios');\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=d8b0ad5d4fb786d62f1125fa68e28b99';\n\nconst API = {\n  async fetchTrendingMovies() {\n    const response = await axios(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n    return response.data.results;\n  },\n\n  async fetchMovieById(movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchSearchMovie(searhMovie) {\n    const response = await axios(\n      `${BASE_URL}/search/movie?query=${searhMovie}&${API_KEY}&page=1`\n    );\n    return response.data.results;\n  },\n\n  async fetchCastCredits(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`\n    );\n    return response.data.cast;\n  },\n\n  async fetchMovieReviwes(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  },\n};\n\nexport default API;\n"],"names":["Overlay","styled","loaderRoot","document","querySelector","createPortal","color","height","width","ariaLabel","movieId","useParams","useState","reviwes","setReviwes","isLoading","setIsLoading","useEffect","API","results","fetchReviwes","length","map","author","content","id","axios","require","default","BASE_URL","API_KEY","fetchTrendingMovies","response","data","fetchMovieById","fetchSearchMovie","searhMovie","fetchCastCredits","cast","fetchMovieReviwes"],"sourceRoot":""}
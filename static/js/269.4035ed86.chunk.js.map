{"version":3,"file":"static/js/269.4035ed86.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Overlay/Overlay.jsx","components/Loader/Loader.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/CardMovieInfo/CardMovieInfo.styled.js","components/CardMovieInfo/CardMovieInfo.jsx","pages/MovieDetails.jsx","service/API.tmDB.js"],"sourcesContent":["import styled from 'styled-components';\nimport { color, space, border, flexbox, grid, layout, typography } from 'styled-system';\n\nexport const Box = styled.div`\n  ${color}\n  ${border}\n  ${space}\n  ${grid}\n  ${layout}\n  ${flexbox}\n  ${typography}\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 20;\n`;\n\n","import { createPortal } from 'react-dom';\nimport { Circles } from 'react-loader-spinner';\nimport { Overlay } from 'components/Overlay/Overlay';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nconst Loader = () => {\n  return createPortal(\n    <Overlay>\n      <Circles\n        color=\"orangered\"\n        height={300}\n        width={300}\n        ariaLabel=\"loading-indicator\"\n      />\n    </Overlay>,\n    loaderRoot\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledBackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  background-color: #2045eb;\n\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  &:hover {\n    background-color: orangered;\n    color: white;\n  }\n`;\n","import { TbArrowBackUp } from 'react-icons/tb';\nimport { StyledBackLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledBackLink to={to}>\n      <TbArrowBackUp  />\n      {children}\n    </StyledBackLink>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-block;\n  margin-right: 20px;\n  margin-bottom: 30px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-weight: 500;\n  background-color: #2045eb;\n  transition: color 300ms linear;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover:not(.active) {\n    color: #fff;\n  }\n`;\n","import BackLink from 'components/BackLink/BackLink';\nimport { Box } from 'components/Box';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { StyledLink } from './CardMovieInfo.styled';\n\nconst CardMovieInfo = ({\n  movieDetails: {\n    original_title,\n    overview,\n    release_date,\n    backdrop_path,\n    genres,\n  },\n}) => {\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  const releaseDate = release_date.slice(0, 4);\n  const getMovieGenres = genres.map(({ name }) => name).join(' ');\n\n  return (\n    <>\n      <BackLink to={backLink}>Back</BackLink>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <div>\n          <h1>\n            {original_title}({releaseDate})\n          </h1>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n            alt={original_title}\n          />\n        </div>\n\n        <Box width={500}>\n          <h2>Overwiev</h2>\n          <p> {overview}</p>\n\n          <h3>Genres</h3>\n          <p>{getMovieGenres}</p>\n\n          <h2>Additional information</h2>\n\n          <StyledLink to=\"cast\" state={{ from: location }}>\n            Cast\n          </StyledLink>\n          <StyledLink to=\"reviwers\" state={{ from: location }}>\n            Reviwers\n          </StyledLink>\n        </Box>\n      </Box>\n      <Outlet />\n    </>\n  );\n};\n\nexport default CardMovieInfo;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'service/API.tmDB';\nimport CardMovieInfo from 'components/CardMovieInfo/CardMovieInfo';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMoviesByid() {\n      try {\n        setIsLoading(true);\n\n        const movieData = await API.fetchMovieById(movieId);\n        setMovieDetails(movieData);\n      } catch (error) {\n      } \n      finally {setIsLoading(false)}\n    }\n    getMoviesByid();\n\n  }, [movieId]);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {movieDetails && <CardMovieInfo movieDetails={movieDetails} />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","const { default: axios } = require('axios');\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=d8b0ad5d4fb786d62f1125fa68e28b99';\n\nconst API = {\n  async fetchTrendingMovies() {\n    const response = await axios(`${BASE_URL}/trending/movie/day?${API_KEY}`);\n    return response.data.results;\n  },\n\n  async fetchMovieById(movieId) {\n    const response = await axios(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n    return response.data;\n  },\n\n  async fetchSearchMovie(searhMovie) {\n    const response = await axios(\n      `${BASE_URL}/search/movie?query=${searhMovie}&${API_KEY}&page=1`\n    );\n    return response.data.results;\n  },\n\n  async fetchCastCredits(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`\n    );\n    return response.data.cast;\n  },\n\n  async fetchMovieReviwes(movieId) {\n    const response = await axios(\n      `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  },\n};\n\nexport default API;\n"],"names":["Box","styled","color","border","space","grid","layout","flexbox","typography","Overlay","loaderRoot","document","querySelector","createPortal","height","width","ariaLabel","StyledBackLink","Link","to","children","StyledLink","NavLink","movieDetails","original_title","overview","release_date","backdrop_path","genres","location","useLocation","backLink","state","from","releaseDate","slice","getMovieGenres","map","name","join","display","alignItems","justifyContent","src","alt","movieId","useParams","useState","setMovieDetails","isLoading","setIsLoading","useEffect","API","movieData","getMoviesByid","Loader","axios","require","default","BASE_URL","API_KEY","fetchTrendingMovies","response","data","results","fetchMovieById","fetchSearchMovie","searhMovie","fetchCastCredits","cast","fetchMovieReviwes"],"sourceRoot":""}
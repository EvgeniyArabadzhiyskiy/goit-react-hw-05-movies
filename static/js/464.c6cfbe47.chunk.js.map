{"version":3,"file":"static/js/464.c6cfbe47.chunk.js","mappings":"yMAGaA,EAAMC,EAAAA,GAAAA,IAAH,wEACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,K,qICPSC,EAASR,EAAAA,GAAAA,OAAH,yLAWNS,GAAcT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,+U,SCJxB,EARkB,SAAC,GAAkB,IAAhBW,EAAe,EAAfA,SACnB,OACE,SAACZ,EAAA,EAAD,CAAKa,MAAO,KAAMC,GAAI,GAAIC,GAAG,OAA7B,SACGH,K,mBCLMI,EAAa,CACtBC,eAAgB,CACdC,SAAU,QACVL,MAAO,OACPM,OAAQ,OACRC,KAAM,OACNC,IAAK,QAEPC,aAAc,CACZC,WAAY,WAEdC,kBAAmB,CACjBD,WAAY,WAEdE,cAAe,CACbN,OAAQ,OACRN,MAAO,QAETa,QAAS,CACPH,WAAY,WAEdI,WAAY,CACVT,SAAU,QACVC,OAAQ,QAEVS,OAAQ,CACNL,WAAY,UACZM,QAAS,gBACTC,SAAU,UAEZC,aAAc,CACZC,KAAM,WAERC,WAAY,CACV/B,MAAO,UACP2B,QAAS,SAEXK,OAAQ,CACNC,QAAS,SAEXC,UAAW,CACTb,WAAY,uBCDlB,EApCmB,WACjB,OAAiCc,EAAAA,EAAAA,WAAS,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnBA,EAAMC,iBACNH,GAAa,IAaf,OACE,UAAC,UAAD,CACEI,OAAK,EAELC,OAAQ5B,EACR6B,OAAQP,EACRQ,cAAe,SAAAC,GAAK,OAhBE,SAAAA,GACxBR,EAAaQ,EAAMF,QAeOG,CAAkBD,IAC1CE,WAAY,YACZC,iBAAkB,kBAPpB,WASE,cAAGC,QAASX,EAAZ,mBACA,cAAGW,QAASX,EAAZ,oBACA,cAAGW,QAASX,EAAZ,sBACA,cAAGW,QAASX,EAAZ,0BCFN,EA1BqB,WACnB,OACE,+BACE,iBAAKY,GAAG,kBAAR,WACE,SAAC,EAAD,KACA,gBAAKA,GAAG,YAAR,UACE,SAAC,EAAD,WACE,UAACpD,EAAA,EAAD,CAAKmC,QAAQ,OAAOkB,gBAAgB,MAAMC,QAAQ,OAAlD,WACE,UAAC7C,EAAD,YACE,oCACA,4BACE,SAACC,EAAD,CAAa6C,GAAG,IAAhB,mBACA,SAAC7C,EAAD,CAAa6C,GAAG,SAAhB,0BAGJ,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD","sources":["components/Box.jsx","components/SharedLayout/SharedLayout.styled.js","components/Container.jsx","BurgerMenu/BurgerMunuStyles.js","BurgerMenu/BurgerMenu.jsx","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { color, space, border, flexbox, grid, layout, typography } from 'styled-system';\n\nexport const Box = styled.div`\n  ${color}\n  ${border}\n  ${space}\n  ${grid}\n  ${layout}\n  ${flexbox}\n  ${typography}\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  background-color: #3719df;\n`;\n\nexport const SiteNavLink = styled(NavLink)`\n  font-weight: 500;\n  margin-left: 20px;\n  padding: 8px 16px;\n  font-size: 20px;\n  border-radius: 4px;\n  transition: background-color 200ms linear;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n\n  :hover:not(.active){\n    color: #3719df;\n    background-color: yellow;\n  }\n`;\n","import { Box } from './Box';\n\nconst Container = ({ children }) => {\n  return (\n    <Box width={1200} px={20} mx=\"auto\">\n      {children}\n    </Box>\n  );\n};\n\nexport default Container;\n","export const stylesMune = {\n    bmBurgerButton: {\n      position: 'fixed',\n      width: '36px',\n      height: '30px',\n      left: '36px',\n      top: '36px',\n    },\n    bmBurgerBars: {\n      background: '#373a47',\n    },\n    bmBurgerBarsHover: {\n      background: '#a90000',\n    },\n    bmCrossButton: {\n      height: '24px',\n      width: '24px',\n    },\n    bmCross: {\n      background: '#bdc3c7',\n    },\n    bmMenuWrap: {\n      position: 'fixed',\n      height: '100%',\n    },\n    bmMenu: {\n      background: '#373a47',\n      padding: '2.5em 1.5em 0',\n      fontSize: '1.15em',\n    },\n    bmMorphShape: {\n      fill: '#373a47',\n    },\n    bmItemList: {\n      color: '#b8b7ad',\n      padding: '0.8em',\n    },\n    bmItem: {\n      display: 'block',\n    },\n    bmOverlay: {\n      background: 'rgba(0, 0, 0, 0.3)',\n    },\n  };","import { useState } from 'react';\nimport { elastic as Menu } from 'react-burger-menu';\nimport { stylesMune } from './BurgerMunuStyles';\n\nconst BurgerMenu = () => {\n  const [menuOpen, setmMenuOpen] = useState(false);\n\n  const showSettings = event => {\n    event.preventDefault();\n    setmMenuOpen(false);\n  };\n\n  const handleStateChange = state => {\n    setmMenuOpen(state.isOpen);\n  };\n\n  //   const disabledBurger = () => {\n  //     const screenWidth = window.screen.width;\n  //     const disabledBurgericon = screenWidth > 468 || menuOpen === true;\n  //     return disabledBurgericon ? false : null;\n  //   };\n\n  return (\n    <Menu\n      right\n      //   customBurgerIcon={disabledBurger()}\n      styles={stylesMune}\n      isOpen={menuOpen}\n      onStateChange={state => handleStateChange(state)}\n      pageWrapId={'page-wrap'}\n      outerContainerId={'outer-container'}\n    >\n      <p onClick={showSettings}>Home</p>\n      <p onClick={showSettings}>About</p>\n      <p onClick={showSettings}>Contact</p>\n      <p onClick={showSettings}>Settings</p>\n    </Menu>\n  );\n};\n\nexport default BurgerMenu;\n","import { Suspense } from 'react';\nimport { Box } from '../Box';\nimport { Outlet } from 'react-router-dom';\nimport { Header, SiteNavLink } from './SharedLayout.styled';\nimport Container from 'components/Container';\nimport BurgerMenu from 'BurgerMenu/BurgerMenu';\n\nconst SharedLayout = () => {\n  return (\n    <>\n      <div id=\"outer-container\">\n        <BurgerMenu />\n        <div id=\"page-wrap\">\n          <Container>\n            <Box display=\"grid\" gridAutoColumns=\"1fr\" gridGap=\"16px\">\n              <Header>\n                <span>LOGO</span>\n                <nav>\n                  <SiteNavLink to=\"/\">Home</SiteNavLink>\n                  <SiteNavLink to=\"/movie\">Movie</SiteNavLink>\n                </nav>\n              </Header>\n              <Suspense fallback={null}>\n                <Outlet />\n              </Suspense>\n            </Box>\n          </Container>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SharedLayout;\n"],"names":["Box","styled","color","border","space","grid","layout","flexbox","typography","Header","SiteNavLink","NavLink","children","width","px","mx","stylesMune","bmBurgerButton","position","height","left","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","fill","bmItemList","bmItem","display","bmOverlay","useState","menuOpen","setmMenuOpen","showSettings","event","preventDefault","right","styles","isOpen","onStateChange","state","handleStateChange","pageWrapId","outerContainerId","onClick","id","gridAutoColumns","gridGap","to","Suspense","fallback"],"sourceRoot":""}